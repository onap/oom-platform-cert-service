/*
 * ============LICENSE_START=======================================================
 * oom-certservice-k8s-external-provider
 * ================================================================================
 * Copyright (c) 2019 Smallstep Labs, Inc.
 * Modifications copyright (C) 2020 Nokia. All rights reserved.
 * ================================================================================
 * This source code was copied from the following git repository:
 * https://github.com/smallstep/step-issuer
 * The source code was modified for usage in the ONAP project.
 * ================================================================================
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============LICENSE_END=========================================================
 */

package cmpv2api

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (inputSecretKeySelector *SecretKeySelector) DeepCopyInto(outSecretKeySelector *SecretKeySelector) {
	*outSecretKeySelector = *inputSecretKeySelector
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretKeySelector.
func (inputSecretKeySelector *SecretKeySelector) DeepCopy() *SecretKeySelector {
	if inputSecretKeySelector == nil {
		return nil
	}
	out := new(SecretKeySelector)
	inputSecretKeySelector.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (inputCMPv2Issuer *CMPv2Issuer) DeepCopyInto(outCMPv2Issuer *CMPv2Issuer) {
	*outCMPv2Issuer = *inputCMPv2Issuer
	outCMPv2Issuer.TypeMeta = inputCMPv2Issuer.TypeMeta
	inputCMPv2Issuer.ObjectMeta.DeepCopyInto(&outCMPv2Issuer.ObjectMeta)
	inputCMPv2Issuer.Spec.DeepCopyInto(&outCMPv2Issuer.Spec)
	inputCMPv2Issuer.Status.DeepCopyInto(&outCMPv2Issuer.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CMPv2Issuer.
func (inputCMPv2Issuer *CMPv2Issuer) DeepCopy() *CMPv2Issuer {
	if inputCMPv2Issuer == nil {
		return nil
	}
	out := new(CMPv2Issuer)
	inputCMPv2Issuer.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (inputCMPv2Issuer *CMPv2Issuer) DeepCopyObject() runtime.Object {
	if deepCopy := inputCMPv2Issuer.DeepCopy(); deepCopy != nil {
		return deepCopy
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (inputIssuerCondition *CMPv2IssuerCondition) DeepCopyInto(outIssuerCondition *CMPv2IssuerCondition) {
	*outIssuerCondition = *inputIssuerCondition
	if inputIssuerCondition.LastTransitionTime != nil {
		in, out := &inputIssuerCondition.LastTransitionTime, &outIssuerCondition.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CMPv2IssuerCondition.
func (inputIssuerCondition *CMPv2IssuerCondition) DeepCopy() *CMPv2IssuerCondition {
	if inputIssuerCondition == nil {
		return nil
	}
	out := new(CMPv2IssuerCondition)
	inputIssuerCondition.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (inputIssuerList *CMPv2IssuerList) DeepCopyInto(outIssuerList *CMPv2IssuerList) {
	*outIssuerList = *inputIssuerList
	outIssuerList.TypeMeta = inputIssuerList.TypeMeta
	inputIssuerList.ListMeta.DeepCopyInto(&outIssuerList.ListMeta)
	if inputIssuerList.Items != nil {
		in, out := &inputIssuerList.Items, &outIssuerList.Items
		*out = make([]CMPv2Issuer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CMPv2IssuerList.
func (inputIssuerList *CMPv2IssuerList) DeepCopy() *CMPv2IssuerList {
	if inputIssuerList == nil {
		return nil
	}
	out := new(CMPv2IssuerList)
	inputIssuerList.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (inputIssuerList *CMPv2IssuerList) DeepCopyObject() runtime.Object {
	if deepCopy := inputIssuerList.DeepCopy(); deepCopy != nil {
		return deepCopy
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (inputIssuerSpec *CMPv2IssuerSpec) DeepCopyInto(outIssuerSpec *CMPv2IssuerSpec) {
	*outIssuerSpec = *inputIssuerSpec
	outIssuerSpec.KeyRef = inputIssuerSpec.KeyRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CMPv2IssuerSpec.
func (inputIssuerSpec *CMPv2IssuerSpec) DeepCopy() *CMPv2IssuerSpec {
	if inputIssuerSpec == nil {
		return nil
	}
	out := new(CMPv2IssuerSpec)
	inputIssuerSpec.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (inputIssuerStatus *CMPv2IssuerStatus) DeepCopyInto(outIssuerStatus *CMPv2IssuerStatus) {
	*outIssuerStatus = *inputIssuerStatus
	if inputIssuerStatus.Conditions != nil {
		in, out := &inputIssuerStatus.Conditions, &outIssuerStatus.Conditions
		*out = make([]CMPv2IssuerCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CMPv2IssuerStatus.
func (inputIssuerStatus *CMPv2IssuerStatus) DeepCopy() *CMPv2IssuerStatus {
	if inputIssuerStatus == nil {
		return nil
	}
	out := new(CMPv2IssuerStatus)
	inputIssuerStatus.DeepCopyInto(out)
	return out
}
